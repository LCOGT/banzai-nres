language: python
python: 3.6
os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

services:
  - mysql

env:
    global:
        - NUMPY_VERSION=1.15.1
        - PYTHON_INSTALL_COMMAND='python setup.py install'
        - SETUP_CMD = ''
        - RUN_TESTS=1
        - INSTALL_NUMPY=1
        - MAIN_CMD='python setup.py'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        - env: SETUP_CMD='egg_info' RUN_TESTS=0 PYTHON_INSTALL_COMMAND='true' INSTALL_NUMPY=0

        - python: 3.5
          env: SETUP_CMD='egg_info' RUN_TESTS=0 PYTHON_INSTALL_COMMAND='true' INSTALL_NUMPY=0

        - env: RUN_TESTS=1

        - python: 3.5
          env: RUN_TESTS=1

        # Try MacOS X
        - os: osx
          env: RUN_TESTS=1

        # Do a coverage test.
        - os: linux
          env: SETUP_CMD='--coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: SETUP_CMD='build_docs -w'

        # Try all python versions and Numpy versions. Since we can assume that
        # the Numpy developers have taken care of testing Numpy with different
        # versions of Python, we can vary Python and Numpy versions at the same
        # time.
        - os: linux
          env: NUMPY_VERSION=1.12
        - os: linux
          env: NUMPY_VERSION=1.13
        - os: linux
          env: NUMPY_VERSION=1.14

        # Do a PEP8 test with pycodestyle
        - os: linux
          env: MAIN_CMD='pycodestyle banzai --count' RUN_TESTS=0

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; security set-key-partition-list -S 'apple-tool:,apple:' -s -k keychainPass keychainName; fi


install:
  - if [[ "$INSTALL_NUMPY" == 1 ]]; then pip install numpy==$NUMPY_VERSION; fi
  - $PYTHON_INSTALL_COMMAND

script:
   - if [[ "$RUN_TESTS" == 1 ]]; then SETUP_ARRAY=(test --addopts '-m "not e2e"'); else SETUP_ARRAY=(); fi
   - $MAIN_CMD "${SETUP_ARRAY[@]}" $SETUP_CMD

after_success:
    - if [[ "$SETUP_CMD" == '--coverage' ]]; then coveralls --rcfile='banzai_nres/tests/coveragerc'; fi
