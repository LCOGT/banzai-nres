apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "banzai-nres-e2e.fullname" . }}
  labels:
{{ include "banzai-nres-e2e.labels" . | indent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "banzai-nres-e2e.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "banzai-nres-e2e.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:

      securityContext:
        fsGroup: 10000

      # Create some empty directories to be mounted within the Pod
      volumes:
        - name: nres-data
          persistentVolumeClaim:
            claimName: {{ include "banzai-nres-e2e.fullname" . }}

      initContainers:
        # When the Pod is initialized, copy all files within the container at path
        # /archive/engineering into the empty data volume mounted at /data
        - name: nres-data
          image:  "{{ .Values.dataImage.repository }}:{{ .Values.dataImage.tag }}"
          imagePullPolicy: {{ .Values.dataImage.pullPolicy}}
          securityContext:
            runAsUser: 10087
            runAsGroup: 10000
          volumeMounts:
            - name: nres-data
              mountPath: /data
              readOnly: false
          command:
            - /bin/cp
            - -a
            - /archive/engineering
            - /data/
          resources:
            requests:
              cpu: "0.1"
              memory: "128M"
            limits:
              cpu: "1"
              memory: "1Gi"
      containers:
        - name: banzai-nres-e2e-redis
          image: redis:5.0.3
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "0.1"
              memory: "128M"
            limits:
              cpu: "1"
              memory: "1Gi"
        - name: banzai-nres-e2e-fits-exchange
          image: rabbitmq:3.7.9
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: "0.1"
              memory: "128M"
            limits:
              cpu: "1"
              memory: "1Gi"
        - name: banzai-nres-e2e-celery-workers
          image:  "{{ .Values.banzaiNRES.repository }}:{{ .Values.banzaiNRES.tag }}"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: nres-data
              mountPath: /archive/engineering
              subPath: engineering
              readOnly: false
          env:
            - name: DB_ADDRESS
              value: "sqlite:////archive/engineering/test.db"
            - name: RETRY_DELAY
              value: "0"
            - name: REDIS_HOST
              value: "redis://localhost:6379/0"
            - name: BANZAI_WORKER_LOGLEVEL
              value: debug
            - name: CALIBRATE_PROPOSAL_ID
              value: "calibrate"
            - name: LAKE_URL
              value: "http://lake-old.lco.gtn/blocks/"
            - name: OMP_NUM_THREADS
              value: "2"
            - name: FITS_EXCHANGE
              value: "fits_files"
            - name: OPENTSDB_PYTHON_METRICS_TEST_MODE
              value: "1"
          command:
            - celery
            - -A
            - banzai
            - worker
            - --hostname
            - "banzai-celery-worker"
            - --concurrency
            - "2"
            - -l
            - "debug"
          resources:
            requests:
              cpu: "0.1"
              memory: "4Gi"
              ephemeral-storage: "1Gi"
            limits:
              cpu: "4"
              memory: "8Gi"
        - name: banzai-nres-e2e-listener
          image:  "{{ .Values.banzaiNRES.repository }}:{{ .Values.banzaiNRES.tag }}"
          imagePullPolicy:  "{{ .Values.banzaiNRES.pullPolicy }}"
          volumeMounts:
            - name: nres-data
              mountPath: /archive/engineering
              subPath: engineering
              readOnly: false
          env:
            - name: DB_ADDRESS
              value: "sqlite:////archive/engineering/test.db"
            - name: FITS_BROKER_URL
              value: "localhost"
            - name: REDIS_HOST
              value: "redis://localhost:6379/0"
            - name: CALIBRATE_PROPOSAL_ID
              value: "calibrate"
            - name: LAKE_URL
              value: "http://lake-old.lco.gtn/blocks/"
            - name: FITS_EXCHANGE
              value: "fits_files"
            - name: OPENTSDB_PYTHON_METRICS_TEST_MODE
              value: "1"
          command:
            - banzai_nres_run_realtime_pipeline
            - "--db-address=sqlite:////archive/engineering/test.db"
            - "--fpack"
            - "--broker-url=localhost"
          resources:
            requests:
              cpu: "0.1"
              memory: "128M"
            limits:
              cpu: "1"
              memory: "1Gi"
