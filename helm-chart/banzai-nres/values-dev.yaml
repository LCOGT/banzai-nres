# Development deployment values for banzai-nres.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Automatically manage worker count within the configured limits. More workers
# will be started when the CPU usage rises above the configured threshold.
horizontalPodAutoscaler:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 50

image:
  repository: docker.lco.global/banzai-nres
  tag: "1.0.0"
  pullPolicy: IfNotPresent

# Values for the OCS Ingester library, used by BANZAI.
ingester:
  apiRoot: http://banzai-nres-archive-api-archiveapi.dev/
  s3Bucket: banzai-nres-lco-global
  ingesterProcessName: banzai-nres-dev
  postProcessFiles: false
  noMetrics: true

# Values specific to the BANZAI-NRES pipeline
banzaiNres:
  configdbUrl: http://configdb.lco.gtn/sites/
  observationPortalUrl: http://internal-observation-portal.lco.gtn/api/observations/
  useDifferentArchiveSources: true
  rawDataApiRoot: http://archiveapi-internal.prod/
  calibrateProposalId: calibrate
  banzaiWorkerLogLevel: debug
  fitsBroker: rabbitmq.lco.gtn
  fitsExchange: archived_fits
  queueName: banzai_nres_dev_pipeline
  phoenixFileLocation: s3://banzai-nres-phoenix-models-lco-global
  celeryTaskQueueName: banzai_nres

# CronJob configuration to periodically update instrument table in BANZAI-NRES DB
instrumentTableCronjob:
  schedule: "*/5 * * * *"

useDockerizedDatabase: true

postgresql:
  hostname: "db.example.com"
  postgresqlUsername: "banzainres"
  postgresqlDatabase: "banzainres"
  existingSecret: "banzai-nres-secrets"
  service:
    port: "5432"
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 1
      memory: 512Mi

useDockerizedRabbitMQ: true

rabbitmq:
  rabbitmq:
    username: "user"
    existingPasswordSecret: "banzai-nres-secrets"
  vhost: ""
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 1
      memory: 1Gi
